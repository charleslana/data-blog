[
  {
    "id": 1,
    "date": "2022-01-22T00:00:00",
    "category": "linux",
    "tags": ["linux", "sistema operacional", "kernel"],
    "title": "Por que usar o Linux como Sistema Operacional?",
    "description": "<p>Provavelmente você já deve ter utilizado algum sistema Linux ou baseado nele. Sim, se você já usou um sistema Android, um MacOs, IOS ou se simplesmente já configurou o roteador da sua casa, você possui uma vivência com o sistema. Linux não é somente um sistema operacional, mas sim uma nomenclatura dada a sistemas baseados no Kernel Linux, que é um software disponível para modificações onde várias empresas criam suas próprias distribuições.</p><br/><br/><img src='https://i.imgur.com/qbW8Ops.png' width='100%'/><br/><br/><p>Agora, por que utilizar o Linux como Sistema Operacional?</p><br/><h3>O Linux é gratuito</h3><br/><p>O fato mais chamativo dos sistemas operacionais Linux é o fato da maioria das plataformas serem gratuitas, onde você pode escolher a distribuição que mais agrada sua necessidade e não precisa se preocupar com pirataria ou a expiração de licença. Existe a mais ampla gama de distribuições, sendo elas desde utilização para desktop, servidores e até sistemas voltados para segurança de rede, ou seja, existem inúmeras utilizações e aplicações para cada caso.</p><br/><p>Em relação aos softwares, as distros possuem uma infinidade de softwares também gratuitos em seu repositório de pacotes nativo e conta com uma grande quantidade de softwares disponíveis para serem baixados e instalados pela internet, incluindo softwares de desenvolvimento, jogos, escritório, editores de vídeo e muito mais.</p><br/><h3>Portabilidade – Sistema operacional Linux</h3><br/><p>Grande parte dos sistemas operacionais tentam utilizar o mínimo de recursos possível da máquina. Nas distros Linux existem sistemas com interface gráfica amigável que utilizam apenas 512MB de memória RAM, além do fato que podem rodar até mesmo em um pendrive com pouco espaço de armazenamento.</p><br/><p>Existem plataformas já desenvolvidas para rodar sistemas Linux nativamente consumindo o mínimo de recursos possível como o Raspberry Pi, um computador “portátil” que pode ser utilizado com um cartão de memória comum como armazenamento.</p><br/><p>O Linux é muito utilizado em servidores também graças ao fato de consumir pouco recurso de hardware da máquina, tendo como prioridade o desempenho dos serviços.</p><br/><h3>Personalizável – Linux como sistema operacional</h3><br/><p>Com uma variedade de ambientes gráficos, você consegue deixar o sistema do seu próprio jeito, podendo mudar para uma melhor performance de suas atividades, até a customização da parte gráfica, onde podemos alterar desde a barra de menu até a Splash screen.</p><br/><p>Mesmo sem utilizar ambientes gráficos é possível inserir customizações dentro de servidores utilizando alguns recursos nativos, por exemplo a alteração da exibição da linha de comando, deixando mais claro a utilização, adicionar banners de indicação para serviços de acesso remoto, sem limites à utilização.</p><br/><h3>Segurança</h3><br/><p>Os servidores baseados em Linux possuem a capacidade de serem flexíveis o bastante para atender uma gama de necessidades  executando desde serviços de firewall e servidores web. As distribuições deixam claro ao usuário o que está sendo utilizado no sistema, é muito difícil que o usuário comum consiga executar algo que destrua o sistema sem a visualização prévia do conteúdo. Um outro fator levado em consideração pelas empresas ao utilizarem Linux é a baixa existência de vírus funcionais quando comparado com o sistema Microsoft Windows, já que devido ao seu sistema de permissionamento, o usuário comum fica mais restrito à executar ações/scripts que possam ser prejudicial ao sistema operacional, tornando-se assim mais seguros.</p><br/><p>Não existindo assim a necessidade evidente da utilização de um software de antivírus, somente que mantenha um serviço de firewall ativo na máquina para que gerencie tentativas de acesso remoto.</p><br/><h3>Ótimo sistema para desenvolvimento</h3><br/><p>Linux já vem por padrão com interpretadores e compiladores de várias linguagens, por exemplo o gcc, python, shell, java além de algumas distribuições já possuírem também por padrão um ambiente de desenvolvimento nativo. Se você procura aprender programação, usar linux é uma ótima opção.</p><br/><h3>Linux também roda jogos</h3><br/><p>Há muito tempo que não existe mais a famosa frase “Linux não roda jogos”. A Steam e várias outras plataformas já desenvolveram sistemas próprios para rodar seus jogos em sistemas Linux. Mesmo a plataforma não possuindo todos os jogos que rodam no Windows, é possível contar com uma grande variedade que acabam rodando no Linux consumindo ainda menos recursos da máquina devido a utilização do sistema. Grandes franquias como, Counter Strike GO, Dota, Team Fortress 2, Terraria, Borderlands conseguem ser executadas com sucesso na plataforma.</p><br/><h3>Perfeito para ambientes escritórios</h3><br/><p>Além de possuir uma enorme gama de aplicativos gratuitos para uso em escritórios, as distribuições mais comuns como Linux Mint, Ubuntu, Fedora, Debian entre outras, oferecem um ambiente agradável e de fácil utilização. Ferramentas como Gimp, Blender, LibreOffice, Inkscape, até softwares de animação como o Open Toonz são de uso livre e podem ser utilizadas sem maiores problemas.</p><br/><h3>Automação</h3><br/><p>O Linux também conta com ambientes perfeitos para automatização de tarefas. Ferramentas poderosas como Ansible, Puppet, Chef e Terraform possuem a capacidade de realizarem tarefas que antes eram manualmente realizadas para um novo ambiente totalmente configurado a partir de um script de configuração.</p><br/><p>Se você acha que está pronto para usar o Linux, deixo aqui a distribuição que utilizo:</p><br/><p>Linux Mint: <a href='https://linuxmint.com/' target='_blank'>https://linuxmint.com/</a></p><br/><p>Você também pode conferir outras diversas distros que pode lhe agradar: <a href='https://distrowatch.com/' target='_blank'>https://distrowatch.com/</a></p>"
  },
  {
    "id": 2,
    "date": "2022-01-22T00:00:00",
    "category": "dev",
    "tags": ["vscode", "ambiente de desenvolvimento", "dev"],
    "title": "Melhores extensões para Ambiente de Desenvolvimento Integrado no VS Code",
    "description": "<h3>Live Server</h3><br/><br/><img src='https://i.imgur.com/cICLQ3K.png' width='100%'/><br/><br/><p>Essa extensão é praticamente obrigatória para você que curte o ambiente de front-end.</p><br/><p>Com o Live Server, é possível fazer alterações no editor de código, alternar para o navegador e atualizar para ver as alterações sem se perder alternando entre janelas.</p><br/><p>De forma ainda mais simples de explicar, digamos que o seu navegador é atualizado automaticamente sempre que você faz alguma alteração de código.</p><br/><h3>ESLint</h3><br/><br/><img src='https://i.imgur.com/yrkRypc.png' width='100%'/><br/><br/><p>ESLint basicamente verifica seu código quanto a erros comuns e permite que você saiba onde está o bug no próprio editor.</p><br/><p>É como um x-9 virtual que está validando seu código enquanto você o escreve e denuncia seus erros.</p><br/><h3>Settings Sync</h3><br/><br/><img src='https://i.imgur.com/FZ0aB7D.png' width='100%'/><br/><br/><p>A extensão Settings Sync é ótima, pois com ela você pode sincronizar configurações, trechos, temas, ícones de arquivos, inicialização, atalhos de teclado, espaços de trabalho e extensões em várias máquinas usando GitHub Gist.</p><br/><h3>Brackets Pair Colorizer 2</h3><br/><br/><img src='https://i.imgur.com/DLVpess.png' width='100%'/><br/><br/><p>Famosa extensão que é bastante útil para diferenciar com cores diferentes os pares de colchetes no código, tornando melhor a visualização dos vários colchetes encadeados que podem surgir.</p><br/><p>Atualmente ela foi descontinuada, no entanto ainda é uma ótima extensão.</p><br/><h3>Auto Rename Tag</h3><br/><br/><img src='https://i.imgur.com/wXtYMmg.png' width='100%'/><br/><br/><p/>Quando estamos trabalhando com HTML e precisamos renomear uma Tag, basta renomear uma delas. O VS Code já faz isso para nós.</p><br/><p>Porém, quando estamos usando React e estamos escrevendo JSX, o VS Code ainda não renomeia ambas as tags.</p><br/><p>A fim de economizar tempo, basta instalar o Auto Rename Tag. Ele funciona perfeitamente com React.</p><br/><h3>Dracula Official</h3><br/><br/><img src='https://i.imgur.com/34wSs2F.png' width='100%'/><br/><br/><p>Tema é algo que todo mundo gosta de alterar na IDE e colocar de acordo com a sua cara. E um dos temas mais baixados para quem usa o Vs Code é o Drácula.</p><br/><h3>Material Icon Theme</h3><br/><br/><img src='https://i.imgur.com/hFXvuRV.png' width='100%'/><br/><br/><p>Dê uma nova cara nos ícones padrões do VS Code.</p><br/><h3>Brazilian Portuguese - Code Spell Checker</h3><br/><br/><img src='https://i.imgur.com/DRFOIog.png' width='100%'/><br/><br/><p>Code Spell Checker é um corretor ortográfico básico que possui suporte a CamelCase; ou seja: se usamos CamelCase quando construímos variáveis, constantes, funções, classes, etc, o Code Spell Checker tratará nomes como palavras distintas e fará a correção das palavras.</p><br/><h3>Prettier</h3><br/><br/><img src='https://i.imgur.com/GVnnj2w.png' width='100%'/><br/><br/><p>Ter um código consistente é considerado uma boa prática. É especialmente benéfico ao trabalhar em um projeto com vários colaboradores.</p><br/><p>Concordar com um conjunto de configurações ajuda com a legibilidade e a compreensão do código. Dessa forma, mais tempo pode ser dedicado resolvendo problemas técnicos desafiadores ao invés de lutando contra problemas como o recuo no código.</p><br/><p>O Prettier garante uma consistência em sua formatação de código e torna o processo automático.</p><br/><h3>EditorConfig</h3><br/><br/><img src='https://i.imgur.com/lBLloxS.png' width='100%'/><br/><br/><p>O EditorConfig ajuda a definir um estilo de código entre os diversos editores de texto, basicamente, devemos criar um arquivo na raiz (costuma-se ser na raiz, não que seja obrigatório) de um determinado projeto, onde, dentro desse arquivo irá conter os estilos de códigos de nossos arquivos, dessa maneira os editores devem respeitar o que foi definido no arquivo.</p>"
  },
  {
    "id": 3,
    "date": "2022-01-22T00:00:00",
    "category": "git",
    "tags": ["git", "github"],
    "title": "Comandos básicos do Git, veja!",
    "description": "<p>Veja abaixo, comandos do git básicos para processos de desenvolvimento.</p><br/><br/><img src='https://i.imgur.com/XnpomWh.png' width='100%'/><br/><br/><h3>Criar uma SSH para o seu git</h3><br/><p>No Terminal</p><br/><pre><code>ssh-keygen -t rsa -b 4096 -C 'seuemail@email.com'</code></pre><br/><h3>Clonar projeto</h3><br/><p>Selecionar a opção SSH</p><br/><pre><code>git clone git@github.com:usuario/test.git</code></pre><br/><h3>Criar uma branch</h3><br/><pre><code>git init</code></pre><br/><pre><code>git add README.md</code></pre><br/><pre><code>git commit -m 'first commit'</code></pre><br/><pre><code>git remote add origin git@github.com:usuario/test.git</code></pre><br/><pre><code>git push origin master</code></pre><br/><h3>Criar branch local</h3><br/><pre><code>git checkout -b nomeBranch</code></pre><br/><h3>Selecionar branch local</h3><br/><pre><code>git checkout nomeBranch</code></pre><br/><h3>Remover branch local</h3><br/><pre><code>git branch -d nomeBranch</code></pre><br/><h3>Remover branch remota</h3><br/><pre><code>git push origin --delete nomeBranch</code></pre><br/><h3>Remover arquivo local e remoto</h3><br/><pre><code>git rm nomeDoArquivo</code></pre><br/><h3>Listar arquivos da branch local</h3><br/><pre><code>git ls-files</code></pre><br/><p>Estes são alguns comandos, mas você pode conferir uma lista de diversos comandos neste site: <a href='https://www.hostinger.com.br/tutoriais/comandos-basicos-de-git' target='_blank'>https://www.hostinger.com.br/tutoriais/comandos-basicos-de-git</a></p><br/><p>Se preferir usar um software de gerenciamento do GitHub, você pode conferir o SmartGit: <a href='https://www.syntevo.com/smartgit/' target='_blank'>https://www.syntevo.com/smartgit/</a></p>"
  }
]
